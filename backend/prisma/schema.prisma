// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "mongodb"
   url      = env("DATABASE_URL")
}

model User {
   id         String    @id @default(auto()) @map("_id") @db.ObjectId
   createdAt  DateTime  @default(now())
   updatedAt  DateTime  @updatedAt
   email      String    @unique
   password   String
   name       String    @default("")
   avatarPath String    @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQH0r7JbMd9Y66TYBQsdVLkEYKJBHNWHaPmeg&usqp=CAU")
   phone      String    @default("+7-000-000-0000")
   orders     Order[]
   reviews    Review[]
   favorites  Product[]
}

model Product {
   id          String      @id @default(auto()) @map("_id") @db.ObjectId
   createdAt   DateTime    @default(now())
   updatedAt   DateTime    @updatedAt
   name        String      @unique
   slug        String      @unique
   description String
   about       String[]
   price       Float
   images      String[]
   categoryId  String      @db.ObjectId
   category    Category    @relation(fields: [categoryId], references: [id])
   reviews     Review[]
   orderItems  OrderItem[]
   user        User?       @relation(fields: [userId], references: [id]) 
   userId      String?     @db.ObjectId 
}

model Category {
   id        String    @id @default(auto()) @map("_id") @db.ObjectId
   createdAt DateTime  @default(now())
   updatedAt DateTime  @updatedAt
   name      String    @unique
   slug      String    @unique
   products  Product[]
}

model Review {
   id        String   @id @default(auto()) @map("_id") @db.ObjectId
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   rating    Int
   text      String
   product   Product? @relation(fields: [productId], references: [id])
   productId String?  @db.ObjectId
   user      User?    @relation(fields: [userId], references: [id])
   userId    String?  @db.ObjectId
}

model Order {
   id        String          @id @default(auto()) @map("_id") @db.ObjectId
   createdAt DateTime        @default(now())
   updatedAt DateTime        @updatedAt
   status    EnumOrderStatus @default(PENDING)
   items     OrderItem[]
   user      User?           @relation(fields: [userId], references: [id])
   userId    String?         @db.ObjectId
}

enum EnumOrderStatus {
   PENDING
   PAYED
   DELIVERY
   READY
}

model OrderItem {
   id        String   @id @default(auto()) @map("_id") @db.ObjectId
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   quantity  Int
   price     Float
   orderId   String   @db.ObjectId
   order     Order    @relation(fields: [orderId], references: [id])
   product   Product? @relation(fields: [productId], references: [id])
   productId String?  @db.ObjectId
}

// внести получения юзера чтобы не копировать одно и то же
